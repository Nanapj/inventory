{"version":3,"sources":["webpack:///./src/app/pages/product/create/product.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAiB;AAC0B;AACoB;AACd;AAEJ;AAG7C;IACI,wBAAmB,KAAW;QAAX,UAAK,GAAL,KAAK,CAAM;QACtB,YAAO,GAAG,kDAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;IADlB,CAAC;IAGnC,kCAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,MAAM,CAAC;IACxC,CAAC;IAED,gCAAO,GAAP;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;aAC9B,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;aACtB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,sCAAa,GAAb,UAAc,OAAgB;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,kDAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACnH,CAAC;IAED,sCAAa,GAAb,UAAc,EAAU;QACpB,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAa,GAAb,UAAc,OAAgB;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,4DAAc,CAAC,EAAE,OAAO,EAAE,kDAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC3I,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAe;QAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,0DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IA9BQ,cAAc;QAD1B,gEAAU,EAAE;yCAEiB,kDAAI;OADrB,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B","file":"product-product-module.js","sourcesContent":["import 'rxjs/Rx';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptions } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { Product } from '../base/product';\r\nimport { CONFIG } from '../../../app.config';\r\n \r\n@Injectable()\r\nexport class ProductService {\r\n    constructor(public _http: Http) { }\r\n    private BaseUrl = CONFIG.baseURL + '/odata/Product';\r\n\r\n    setExpand(expand: string) {\r\n        this.BaseUrl + '?$expand=' + expand;\r\n    }\r\n\r\n    getList(): any  {\r\n        return this._http.get(this.BaseUrl)\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    createProduct(product: Product): any {\r\n        return this._http.post(this.BaseUrl, JSON.stringify(product), new RequestOptions({ headers: CONFIG.headers }));\r\n    }\r\n\r\n    deleteProduct(Id: string) : any{\r\n        console.log(\"Delete \" + Id);\r\n        return this._http.delete(this.BaseUrl + '(' + Id + ')');\r\n    }\r\n\r\n    updateProduct(product: Product): any {\r\n        return this._http.put(this.BaseUrl + '(' + product.Id + ')', JSON.stringify(product), new RequestOptions({ headers: CONFIG.headers }));\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}"],"sourceRoot":""}